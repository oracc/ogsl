<esp:page xmlns:esp="http://oracc.org/ns/esp/1.0" xmlns="http://www.w3.org/1999/xhtml" xmlns:xh="http://www.w3.org/1999/xhtml" xmlns:xpd="http://oracc.org/ns/xpd/1.0">
  <esp:name>Maintenance</esp:name>
  <esp:title>Maintainer Notes</esp:title>
  <html>
    <head/>
    <body>
    <p>The new OGSL and signlist tool are not yet fully integrated
    into Oracc: this page explains what can be expected to work and
    what the plans are for further integration.</p>

    <h2>Components</h2>

    <p>There are several components to OGSL and the signlist tools;
    some understanding of what they are is helpful for the following
    sections.</p>

    <dl>
      <dt>OGSL</dt><dd><p>The signlist itself, 00lib/ogsl.asl in the
      ogsl project</p></dd>
      <dt>SX</dt><dd><p>The main processor for Oracc ASL (signlist)
      files</p></dd>
      <dt>SLL</dt><dd><p>The Sign List Library--a library used by SX
      and other programs to load OGSL</p></dd>
      <dt>GVL</dt><dd><p>The Grapheme Validation Library--a library
      used by the ATF processor and other programs to check
      transliteration; also uses SLL to check the validity of
      graphemes in transliteration.</p></dd>
    </dl>
    
    <h2>Building</h2>

    <p>The normal Oracc build is not fully functional in the ogsl
    project; for now two elements of the build are supported:</p>

    <pre class="cookbook">
      oracc update
      oracc build</pre>

      <h3>Oracc update</h3>
      <p>This runs sx on ogsl.asl and rebuilds the data file which is
      used by SLL: this means that changes such as added values will
      be recognized on build-oracc after an oracc update.  It also
      rebuilds the auto-generated pages on missing lists and Unicode
      data.</p>
      <h3>Oracc build</h3>
      <p>This only rebuilds the portal pages, which means that if
      edits to ogsl.asl have changed the missing lists or Unicode
      data, those changes will be visible on the new portal pages on
      build-oracc.</p>

    <p>At present <code class="cookbook">oracc serve</code> is not
    supported; this will change as soon as the OGSL/SSL/GVL
    integration is complete.  For now this means that changes made to
    OGSL will be effective on build-oracc, but will not propagated to
    the Munich build server or to the public servers.</p>
      
    <h2>Integration</h2>

    <p>One of the reasons for rewriting the signlist tools was that
    there were four different ways of accessing signlist data in Oracc
    subsystems. Integration with the ATF processor (in Oracc 1 this is
    'ox'; in Oracc 2 it will be 'ax') is complete and under testing.</p>

    <p>Integration with the online signlist that is part of OGSL and
    ePSD is functional but needs some revision.</p>
    
    <p>Integration with glossary building is untested.</p>

    <h2>OIDs</h2>

    <p>OGSL is partly integrated into the Oracc persistent IDs (OIDs)
    subsystem: sx looks up OIDs in the central OID table and reports
    any signs that do not have OIDs. For the moment these need to be
    added manually, but this will be rectified very soon.</p>

    <p>The plan is to integrate OGSL more closely with the OIDs in
    the near future. It is likely that all the existing OIDs for signs
    will then be revoked and reissued to provide a clean start, after
    which changes in sign-names, removal of signs, and the physical
    merging of signs (not the simple tagging of mergers) will need to
    be curated with editing protocals as used in curating ePSD OIDs.
    It's not entirely clear how @forms will be handled with OIDs
    yet.</p>

    <h2>Editing</h2>

    <h3>Adding/deleting @v, @form (with existing name), @list</h3>
    
    <p>OGSL editing is open for business: values can be added
    (they do not affect OIDs); @form entries which reference existing
    signs or forms can also be added or deleted (they do not affect
    OIDs). @list entries can be added or modified.</p>

    <h3>Changing Sign/Form Names</h3>

    <p>Changes to sign or form names will presently cause warnings
    that OIDs are needed; for now it would be better to notate them
    with:</p>

    <pre>
    @sign |A.DU&amp;A.DU|
    @inote >|(A.DU)&amp;(A.DU)|</pre>

    <p>This will allow a script to edit the OID table so that the OID
    for the former name now has the new name as its key.</p>

    <h3>Adding Signs</h3>
    <p>Until OID curation begins signs can be added as necessary
    and Steve will add the OIDs as required.</p>
    
  </body>
  </html>
</esp:page>
